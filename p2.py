#!/usr/bin/python

import itertools
import operator
import os
import re
import sys

def __print_usage():
    '''prints usage information'''
    print """Project Euler - Problem 2

http://projecteuler.net/

Each new term in the Fibonacci sequence is generated by adding the previous two
terms.  By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.

Answer: 4613732

Usage:
    %(file)s <threshold>

    threshold - maximum number to include in the sum, inclusive, default 4000000

Examples:
    %(file)s
    4613732

    %(file)s 1000
    798""" % { 'file': os.path.basename(__file__) }

THRESHOLD_DEFAULT = 4000000

def __fibonacci_sequence():
    '''generator function for the Fibonacci sequence'''
    first = 0
    second = 1

    while True:
       yield second
       firstTemp = first
       first = second
       second = firstTemp + second

if len(sys.argv) > 1 and not re.match('^\d+$', sys.argv[1]):
    __print_usage()
    sys.exit()

threshold = int(sys.argv[1]) if len(sys.argv) > 1 else THRESHOLD_DEFAULT
fibs = (fib for fib in __fibonacci_sequence())
fibsUnderThreshold = itertools.takewhile(lambda fib: fib <= threshold, fibs)
evenFibsUnderThreshold = filter(lambda fib: fib % 2 == 0, fibsUnderThreshold)
sum = reduce(operator.add, evenFibsUnderThreshold)
print sum
